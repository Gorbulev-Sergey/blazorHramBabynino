@page "/photos/{id:int}"
@inject PhotosService PhotosService
@inject IJSRuntime JSRuntime

<div id="modal_album" class="modal bg-light m-0 p-0" tabindex="-1">
    @*Кнопка закрыть диалоговое окно*@
    <a class="close bg-light text-dark rounded pl-2 pr-2 pt-1 pb-1 m-2 position-absolute" href="/posts" style="z-index:10; right:0; top:0" @onclick='()=>JSRuntime.InvokeAsync<string>("Hidden_album", "modal_album")'>
        <i class="fas fa-times m-0 p-0"></i>
    </a>
    @*Содержимое диалогового окна*@
    <div id="carouselControls" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            <li data-target="#carouselControls" data-slide-to="0" class="active"></li>
            @for (int i = 1; i < album.images.Count; i++)
            {
                <li data-target="#carouselControls" data-slide-to="@i"></li>
            }
        </ol>
        <div class="carousel-inner">
            @foreach (var photo in album.images)
            {
                if (photo == album.images.ElementAt(0))
                {
                    <div class="carousel-item active text-center">
                        <img class="vh-100" src="@photo.url">
                    </div>
                }
                else
                {
                    <div class="carousel-item text-center">
                        <img class="vh-100" src="@photo.url">
                    </div>
                }
            }
        </div>
        <a class="carousel-control-prev" href="#carouselControls" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Назад</span>
        </a>
        <a class="carousel-control-next" href="#carouselControls" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Вперёд</span>
        </a>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    public imageAlbum album { get; set; } = new imageAlbum();

    protected override void OnParametersSet()
    {
        album = PhotosService.itemById(id);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine("Привет");
        JSRuntime.InvokeVoidAsync("show");
    }
}
