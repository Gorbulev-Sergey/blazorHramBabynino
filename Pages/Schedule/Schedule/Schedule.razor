@using System.Globalization
@inject ISchedulesService SchedulesService


  
        <div class="table-responsive border-0 shadow-sm" style="border-radius:.25rem">
            <table class="table border-0 table-dark m-0" style="border-radius:.25rem">
                <thead class="border-0">
                    <tr class="text-white border-0">
                        <th scope="col" class="mr-1"><span class="badge badge-primary">Дата</span></th>
                        <th scope="col"><span class="badge badge-primary">Праздник</span></th>
                        <th scope="col"><span class="badge badge-primary">Время</span></th>
                        <th scope="col"><span class="badge badge-primary">Богослужение</span></th>
                    </tr>
                </thead>
                <tbody>
                    @{int дата_предыдущего = 0; }
                    @foreach (var str in schedule)
                    {
                        if (дата_предыдущего != str.date_and_time.Day)
                        {
                            <Schedule_string schedule_string="str" date_show="true"></Schedule_string>
                            дата_предыдущего = str.date_and_time.Day;
                        }
                        else
                        {
                            <Schedule_string schedule_string="str" date_show="false"></Schedule_string>
                        }
                    }
                </tbody>
            </table>
        </div>

<br />


@code {
    [Parameter]
    public DateTime date { get; set; }

    [Parameter]
    public string title { get; set; }

    public List<schedule_string> schedule { get; set; }

    protected override async Task OnInitializedAsync()
    {
        schedule = SchedulesService.schedule(date);
    }
}