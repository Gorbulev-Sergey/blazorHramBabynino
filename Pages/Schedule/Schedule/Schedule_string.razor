@using System.Globalization

<tr class="@цвет_фона border-top-0">
    @if (date_show)
    {
        <th scope="row" width="15%" class="mr-1 font-weight-normal">
            <span class="">
                @schedule_string.date_and_time.Day, @CultureInfo.GetCultureInfo("ru-RU").DateTimeFormat.GetDayName(schedule_string.date_and_time.DayOfWeek)
            </span>
        </th>
        <th scope="row" width="60%" class="font-weight-normal"><div class="@маркер_праздника">@schedule_string.description</div></th>
    }
    else
    {
        <th scope="row" width="15%" class="border-top-0"></th>
        <th scope="row" width="61%" class="border-top-0 font-weight-normal"><div class="@маркер_праздника">@schedule_string.description</div></th>
    }
    <th scope="row" width="20%" class="font-weight-normal text-right">
        <span class="">
            @schedule_string.GetDescription(Enum.Parse<тип_службы>(schedule_string.prayer.ToString()))
        </span>
    </th>    
    <th scope="row" width="4%" class="font-weight-normal"><div class="text-right mr-1">@schedule_string.date_and_time.ToString("H:mm")</div></th>
</tr>


@code {
    [Parameter]
    public schedule_string schedule_string { get; set; }

    [Parameter]
    public bool date_show { get; set; }

    string цвет_фона;
    string маркер_праздника
    {
        get
        {
            switch (schedule_string.тип_праздника)
            {
                case тип_праздника.пусто: return "";
                case тип_праздника.жирный: return "font-weight-bold";
                case тип_праздника.курсив: return "font-italic";
                case тип_праздника.жирный_заглавный: return "font-weight-bold text-uppercase";
                case тип_праздника.primary: return "text-primary font-weight-bold text-uppercase";
            }
            return "";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (schedule_string.date_and_time.DayOfWeek == DayOfWeek.Sunday)
        {
            цвет_фона = "bg-light text-danger";
        }
    }
}
