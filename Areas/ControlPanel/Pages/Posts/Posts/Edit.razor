@inject ICRUD<post> PostsService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime


<div class="d-flex justify-content-between align-items-center mb-3">
    @*Заголовок страницы*@
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link active" id="list-home-list" data-toggle="pill" href="#list-home">Обложка</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="list-content-list" data-toggle="pill" href="#list-content">Содержимое</a>
        </li>
    </ul>
    @*Кнопки сохранения и отмены*@
    <div class="form-group mb-0">
        <a class="btn btn-secondary" href="/cpanel/posts">Отмена</a>
        <input type="button" value="Сохранить" class="btn btn-primary" @onclick="()=>сохранить()" />
    </div>
</div>

@*<EditForm Model="post">*@
<div class="tab-content" id="nav-tabContent">
    @*Обложка публикации*@
    <div class="tab-pane fade show active" id="list-home">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <input @bind="post.title" class="form-control" placeholder="Название" />
                </div>
                <div class="form-group">
                    <textarea @bind="post.description" rows="4" class="form-control" placeholder="Краткое описание" />
                </div>
                <div class="form-group d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <input id="publish" class="bg-dark" type="checkbox" value="false" @bind="post.published" />
                        <label for="publish" class="ml-1 mb-0">Опубликовать</label>
                    </div>
                    <div class="d-flex align-items-center">
                        <div class="mr-1">Дата публикации:</div>
                        <input type="date" class="btn btn-light" placeholder="месяц" @bind="post.created" title="Выберите дату" />
                    </div>
                </div>
                <div class="form-group">
                    <razorHramBabynino.Areas.ControlPanel.Pages.Tags.Tag.TagsSearcher addedTags="post.tags"></razorHramBabynino.Areas.ControlPanel.Pages.Tags.Tag.TagsSearcher>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <select class="form-control" @bind="тип_публикации" title="Тип публикации">
                        @foreach (var t in type.GetNames(typeof(type)).ToList())
                        {
                            <option class="bg-light">@t</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <input @bind="post.cover_image" class="form-control" placeholder="Обложка (url картинки)" />
                    @if (!String.IsNullOrEmpty(post.cover_image))
                    {
                        <img class="card-img mt-3" src="@post.cover_image" />
                    }
                </div>
                <div class="form-group">
                    <input @bind="post.cover_video" class="form-control" placeholder="Обложка (url видео)" />
                    @if (!String.IsNullOrEmpty(post.cover_video))
                    {
                        <div class="embed-responsive embed-responsive-16by9 mt-3">
                            <iframe class="embed-responsive-item" src='@post.cover_video.Replace("youtu.be","youtube.com/embed")?rel=0' frameborder="0" allowfullscreen></iframe>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    @*Содержимое публикации*@
    <div class="tab-pane fade" id="list-content">
        <div class="form-group">
            <Editor></Editor>
        </div>
        <div class="form-group">
            <div id="editor" class="form-control h-auto" style="min-height:300px" contenteditable="true">@((MarkupString)post.content)</div>
        </div>
    </div>
</div>
@*</EditForm>*@

@code {
    [Parameter]
    public int ID { get; set; }

    public post post = new post();
    string тип_публикации
    {
        get
        {
            return post.type.ToString();
        }
        set
        {
            post.type = Enum.Parse<type>(value);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        post = await PostsService.itemByIdAsync(ID);
    }

    async Task сохранить()
    {
        post.content = (await JSRuntime.InvokeAsync<string>("editor_html", "#editor"));
        await PostsService.updateAsync(post);
        NavigationManager.NavigateTo("/cpanel/posts", true);
    }

}
