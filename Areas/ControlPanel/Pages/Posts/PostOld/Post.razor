@inject IPostsService PostsService


<div class="row mb-2 border-top pt-2">
    <div class="col-2"><img class="img-fluid" src="@post.cover_image" /></div>
    <div class="col-6 d-flex flex-column">
        <small class="text-muted">@post.created.ToShortDateString()</small>
        <h5>@post.title</h5>
        @((MarkupString)post.description)
    </div>
    <div class="col-4">
        <div class="btn-group">
            <select class="btn btn-light" @bind="тип_публикации" title="Тип публикации">
                @foreach (var t in type.GetNames(typeof(type)).ToList())
                {
                    <option class="bg-light">@t</option>
                }
            </select>
            <select class="btn btn-light" @bind="публикация_опубликована" title="Опубликована/Неопубликована">
                <option class="bg-light" value="true">Опубликована</option>
                <option class="bg-light" value="false">Неопубликована</option>
            </select>

            <a class="btn btn-light" title="Изменить" href="/cpanel/posts/edit/@post.ID"><i class="fas fa-pencil-alt"></i></a>
            <button class="btn btn-light" title="Удалить" @onclick="@удалить_публикацию"><i class="fas fa-trash text-danger"></i></button>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public post post { get; set; }

    string тип_публикации
    {
        get
        {
            return post.type.ToString();
        }
        set
        {
            post.type = Enum.Parse<type>(value);
            PostsService.update(post);
        }
    }

    string публикация_опубликована
    {
        get
        {
            if (post.published) { return "true"; }
            else { return "false"; }
        }
        set
        {
            if (value == "true") { post.published = true; }
            else { post.published = false; }
            PostsService.update(post);
        }
    }

    async Task удалить_публикацию()
    {
        await PostsService.delete(post.ID);
    }
}
