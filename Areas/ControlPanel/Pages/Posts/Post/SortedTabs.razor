<div class="mb-3">
    <select class="btn btn-sm btn-dark" @bind="filter1">
        @foreach (var item in Enum.GetValues(typeof(filter1)))
        {
            <option>@item</option>
        }
    </select>

    <div class="btn-group btn-group-sm">
        <div class="btn btn-sm btn-secondary mb-0">тип:</div>
        <select class="btn btn-sm btn-dark" @bind="filter2">
            @foreach (var item in Enum.GetValues(typeof(filter2)))
            {
                <option>@item</option>
            }
        </select>
    </div>

    <div class="btn-group btn-group-sm">
        <div class="btn btn-sm btn-secondary mb-0">дата:</div>
        <select class="btn btn-sm btn-dark" @bind="filter3">
            @foreach (var item in Enum.GetValues(typeof(filter3)))
            {
                <option>@item</option>
            }
        </select>
    </div>

    <div class="btn-group btn-group-sm">
        <div class="btn btn-sm btn-secondary mb-0">теги:</div>
        <select class="btn btn-sm btn-dark" @bind="filter4">
            <option></option>
            @foreach (var item in tags)
            {
                <option>@item.name</option>
            }
        </select>
    </div>
</div>


@code {
    Filter Filter { get; set; } = new Filter();

    [Parameter]
    public List<tag> tags { get; set; } = new List<tag>();

    [Parameter]
    public EventCallback<Filter> filterChanged { get; set; }

    string filter1
    {
        get => Filter.filter1.ToString();
        set
        {
            Filter.filter1 = (filter1)Enum.Parse(typeof(filter1), value);
            filterChanged.InvokeAsync(Filter);
        }
    }

    string filter2
    {
        get => Filter.filter2.ToString();
        set
        {
            Filter.filter2 = (filter2)Enum.Parse(typeof(filter2), value);
            filterChanged.InvokeAsync(Filter);
        }
    }

    string filter3
    {
        get => Filter.filter3.ToString();
        set
        {
            Filter.filter3 = (filter3)Enum.Parse(typeof(filter3), value);
            filterChanged.InvokeAsync(Filter);
        }
    }

    string filter4
    {
        get => Filter.filter4;
        set
        {
            Filter.filter4 = value;
            filterChanged.InvokeAsync(Filter);
        }
    }
}
